{"version":3,"sources":["components/Fetch/getInfoByServer.ts","components/Fetch/fetchAllUrl.ts","components/RouteNavBar/Characters/PersonCardPopup/PersonCardPopup.tsx","components/RouteNavBar/Characters/CharacterCard/CharacterCard.tsx","components/RouteNavBar/Characters/CharacterListForm/CharacterListForm.tsx","components/RouteNavBar/Characters/CharactersList/Charactesrs.tsx","components/RouteNavBar/Episodes/EpisodesListTable/EpisodeListTable.tsx","components/RouteNavBar/Episodes/EpisodesList/EpisodesList.tsx","components/RouteNavBar/Locations/LocationsForm/LocationsForm.tsx","components/RouteNavBar/Locations/LocationsList/LocationsList.tsx","components/RouteNavBar/MyWatchList/FunctionForLocaleStorage/FunctionForLocaleStorage.ts","components/RouteNavBar/MyWatchList/MyList/MyWatchList.tsx","components/RouteNavBar/NavigationBarRoute/RouteNavBar.tsx","components/NavigationBar/NavigationBar.tsx","App.tsx","reportWebVitals.ts","store/characterReducer/reducer.ts","store/episodesReducer/reducer.ts","store/locationReducer/reducer.ts","store/MyWatchListReducer/reducer.ts","store/index.ts","index.tsx"],"names":["getCharactersByServer","setState","a","axios","get","allCharacters","data","results","alert","getLocationsByServer","allLocation","getEpisodesByServer","allEpisodes","PersonCardPopup","show","setShow","character","Modal","size","onHide","Header","closeButton","Title","name","Body","className","alt","src","image","gender","species","status","location","url","episode","CharacterCard","useState","Fragment","onClick","CharacterListForm","setStatus","setSpecies","setGender","hideShowForm","useSelector","item","characterReducer","onChange","e","target","value","placeholder","CharactersList","array","characters","setCharacters","useEffect","length","filter","checkGender","checkStatus","map","id","EpisodeListTable","air_date","EpisodesList","episodesList","setEpisodesList","inputName","setInputName","console","log","episodeReducer","Form","Control","Table","bordered","hover","toLowerCase","includes","LocationsForm","setName","setType","dimension","setDimension","type","locationReducer","LocationsList","locations","setLocations","striped","filterByDimension","filterByType","addToLocaleStorage","list","localStorage","setItem","JSON","stringify","removeCheckedfromLocaleStorage","parse","getItem","MyWatchList","myWatchListReducer","isValidInput","setIsValidInput","nameEpisode","setNameEpisode","clickAdd","setClickAdd","watchList","setWatchList","checked","setChecked","isInvalid","isValid","Check","prev","CloseButton","Button","listDate","Date","toLocaleString","NavigationBarRoute","path","exact","NavigationBar","dispatch","useDispatch","currentUrl","setCurrentUrl","choosenLink","setChoosenLink","Navbar","bg","variant","Container","Brand","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","OPEN","defaultState","combineReducer","combineReducers","state","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9f00324.chunk.js","sourcesContent":["import axios from 'axios';\nimport { characters, locations, episodes } from './fetchAllUrl';\n\nexport const getCharactersByServer = async(setState:(a:any) => void) => {\n  try {\n    const allCharacters = await axios.get(characters);\n    setState(allCharacters.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n};\n\nexport const getLocationsByServer = async(setState:(a:any) => void) => {\n  try {\n    const allLocation = await axios.get(locations);\n    setState(allLocation.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n}\n\nexport const getEpisodesByServer = async(setState:(a:any) => void) => {\n  try {\n    const allEpisodes = await axios.get(episodes);\n    setState(allEpisodes.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n}\n\n\n\n","export const characters = \"https://rickandmortyapi.com/api/character\";\nexport const  locations = \"https://rickandmortyapi.com/api/location\";\nexport const episodes = \"https://rickandmortyapi.com/api/episode\";","import { Modal } from 'react-bootstrap';\nimport { characterTypes } from '../../../../types/Fetch/Characters';\nimport './PersonCardPopup.scss';\n\nexport const PersonCardPopup = ({show,setShow,character}:characterTypes) => {\n  return (\n    <Modal\n      size=\"xl\"\n      show={show}\n      onHide={() => setShow(false)}\n    >\n    <Modal.Header closeButton>\n      <Modal.Title>{character.name}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"PersonCardPopup__container\">\n      <img\n        alt={character.name}\n        src={character.image} \n      />\n      <div className=\"PersonCardPopup__container_text\">\n        <p>\n            Gender: {character.gender}\n        </p>\n        <p>\n            Species: {character.species}\n        </p>\n        <p>\n            Status: {character.status}\n        </p>\n        <p>\n            Location: {character.location?.name}\n        </p>\n        <p>\n            Location(URL): {character.location?.url}\n        </p>\n        <p>\n            Episode(URL): {character.episode?.[0]}\n        </p>\n      </div>\n    </Modal.Body>\n  </Modal>\n)\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { characterTypes } from '../../../../types/Fetch/Characters';\nimport { PersonCardPopup } from '../PersonCardPopup/PersonCardPopup';\n\nexport const CharacterCard = ({character}:characterTypes) => {\n  const [show, setShow] = useState(false);\n\n  return (\n<React.Fragment>\n  <div\n    onClick={() => setShow(true)}\n    className=\"RouteCharacters__container-characters\"\n  >\n    <h3>{character.name}</h3>\n    <img \n      alt={character.name}\n      src={character.image}\n    />\n    <p\n      className=\"RouteCharacters__container-characters_gender\"\n    >\n      Gender: {character.gender}\n    </p>\n    <p\n       className=\"RouteCharacters__container-characters_species\"\n    >\n      Species: {character.species}\n    </p>\n    <p\n      className={`${character.status === \"Alive\" ? \"alive__status\" : \"dead__status\"}`}\n    >\n      Status: {character.status}\n    </p>\n  </div>\n  <PersonCardPopup \n    show={show}\n    setShow={setShow}\n    character={character}\n  />\n</ React.Fragment>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const CharacterListForm = ({setStatus,setSpecies,setGender}:any) => {\n  const hideShowForm = useSelector((item:any) => item.characterReducer.show);\n  return (\n    <>\n    {\n        hideShowForm && (\n          <div className=\"RouteCharacters__container-input\">\n        Species:<select\n          onChange={(e)=>{\n            setSpecies(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">Both</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Alien\">Alien</option>\n        </select>\n        Status:<select\n          onChange={(e)=>{\n            setStatus(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">All</option>\n          <option value=\"Dead\">Dead</option>\n          <option value=\"Alive\">Alive</option>\n          <option value=\"unknown\">unknown</option>\n        </select>\n        Gender:<select\n          onChange={(e)=>{\n            setGender(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">Both</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n        </select>\n      </div>\n        )\n      }\n  </>\n  );\n}","import React,{ useEffect,useState } from 'react';\nimport { getCharactersByServer } from '../../../Fetch/getInfoByServer';\nimport './Characters.scss';\nimport { CharacterCard } from '../CharacterCard/CharacterCard';\nimport { CharacterListForm } from '../CharacterListForm/CharacterListForm';\n\nexport const CharactersList = () => {\n  const [characters,setCharacters] = useState<any[]>([]);\n  const [species,setSpecies] = useState('Both');\n  const [status, setStatus] = useState('Both');\n  const [gender, setGender] = useState('Both');\n\n  const checkSpecies = (array:{species: string}[]): any[] => {\n    if (array.length && species === \"Both\") {\n      return array;\n    }\n    if(array.length && (species === \"Human\" || species === \"Alien\")) {\n      return array.filter(item => item.species === species)\n    }\n    return array;\n  }\n  const checkStatus = (array:{status:string}[]): any[] => {\n    if (array.length && status === \"Both\") {\n      return array;\n    }\n    if(array.length && (status === \"Dead\" || status === \"Alive\" || \"unknown\")) {\n      return array.filter(item => item.status === status)\n    }\n    return array;\n  }\n\n  const checkGender = (array:{gender:string}[]): any[] => {\n    if (array.length && gender === \"Both\") {\n      return array;\n    }\n    if(array.length && (gender === \"Male\"|| gender === \"Female\")) {\n      return array.filter(item => item.gender === gender)\n    }\n    return array;\n  }\n\n  useEffect(() => {\n    getCharactersByServer(setCharacters)\n  },[]);\n\n  return (\n      <div className=\"RouteCharacters\">\n        <div className=\"RouteCharacters__container_title\">\n          <h2>List of Characters</h2>\n        </div>\n        <CharacterListForm \n          setSpecies={setSpecies}\n          setGender={setGender}\n          setStatus={setStatus}\n        />\n        <div className=\"RouteCharacters__container\">\n          {checkGender(checkStatus(checkSpecies(characters))).map(character => (\n            <CharacterCard key={character.id} character={character}/>\n          ))}\n        </div>\n      </div>\n  );\n} ","import React from 'react';\nimport { episodesListTypes } from '../../../../types/Episodes/EpisodesType';\n\ninterface list {\n  item:episodesListTypes;\n}\nexport const EpisodeListTable = ({item}:list) => {\n  return (\n  <tbody key={item.id}>\n    <tr>\n      <td>{item.id}</td>\n      <td>{item.name}</td>\n      <td>{item.air_date}</td>\n      <td>{item.url}</td>\n    </tr>\n  </tbody>\n  );\n}","import React , { useState, useEffect } from 'react';\nimport { getEpisodesByServer } from '../../../Fetch/getInfoByServer';\nimport { Form, Table } from 'react-bootstrap';\nimport './EpisodesList.scss';\nimport { episodesListTypes } from '../../../../types/Episodes/EpisodesType';\nimport { EpisodeListTable } from '../EpisodesListTable/EpisodeListTable';\nimport { useSelector } from 'react-redux';\n\nexport const EpisodesList = () => {\n  const [episodesList,setEpisodesList] = useState<episodesListTypes[]>([]);\n  const [inputName,setInputName] = useState('');\n  const hideShowForm = useSelector((item:any) => {\n    console.log(item.episodeReducer.show);\n    return item.episodeReducer.show;\n  });\n  useEffect(()=> {\n    getEpisodesByServer(setEpisodesList);\n  },[]);\n\n  const filterByName = (array:episodesListTypes[]) => {\n    if(array && inputName.length) {\n      return array.filter(item => (\n        item.name.toLowerCase().includes(inputName.toLowerCase())));\n    }\n    return array;\n  }\n\n  return (\n      <div className={\"Episodes__container\"}>\n        <div className=\"Episodes__container-title\">\n            <h2>Episodes:</h2>\n        </div>\n        {  hideShowForm &&\n          <Form.Control\n            className={\"Episodes__container-filter\"}\n            onChange={({target}) => setInputName(target.value)}\n            value={inputName}\n            placeholder=\"filter by names\"\n          />\n        }\n        <Table bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>name</th>\n            <th>Air date</th>\n            <th>Url episode</th>\n          </tr>\n        </thead>\n          {filterByName(episodesList).map(item => (\n            <EpisodeListTable key={item.id} item={item}/>\n          ))}\n        </Table>\n      </div>\n  );\n} ","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { locationsFormTypes } from '../../../../types/Locations/LocationsTypes';\n\nexport const LocationsForm = (\n  {\n    name,\n    setName,\n    setType,\n    dimension,\n    setDimension,\n    type,\n  }:locationsFormTypes) => {\n    const hideShowForm = useSelector((item:any) => {\n      console.log(item.locationReducer.show);\n      return item.locationReducer.show;\n    });\n  return (\n    <>\n      {hideShowForm &&\n      <div className=\"Locations__container-form\">\n        <Form.Control \n          placeholder=\"filter by names\"\n          value={name}\n          onChange={({target}) => setName(target.value)}\n        />\n        <Form.Control \n          placeholder=\"filter by types\"\n          value={type}\n          onChange={({target}) => setType(target.value)}\n        />\n        <Form.Control \n          placeholder=\"filter by dimensions\"\n          value={dimension}\n          onChange={({target}) => setDimension(target.value)}\n        />\n      </div>}\n    </>\n  );\n} ","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { getLocationsByServer } from '../../../Fetch/getInfoByServer';\nimport './LocationsList.scss';\nimport { locationsTypes } from '../../../../types/Locations/LocationsTypes';\nimport { LocationsForm } from '../LocationsForm/LocationsForm';\nexport const LocationsList = () => {\n  const [name,setName] = useState('');\n  const [type,setType] = useState('');\n  const [dimension,setDimension] = useState('');\n  const [locations,setLocations] = useState<locationsTypes[]>([]);\n\n  useEffect(()=> {\n    getLocationsByServer(setLocations);\n  },[]);\n\n  const filterByNames = (array: locationsTypes[]) => {\n    if (array.length && name.length) {\n      return array.filter(item => (\n        item.name.toLowerCase().includes(name.toLowerCase())));\n    }\n\n    return array;\n  }\n\n  const filterByType = (array:locationsTypes[]) => {\n    if (array.length && type.length) {\n      return array.filter(item => (\n        item.type.toLowerCase().includes(type.toLowerCase())));\n    }\n\n    return array;\n  }\n\n  const filterByDimension = (array:locationsTypes[]) => {\n    if (array.length && dimension.length) {\n      return array.filter(item => (\n        item.dimension.toLowerCase().includes(dimension.toLowerCase())));\n    }\n\n    return array;\n  }\n\n\n  return (\n    <div className=\"Locations__container\">\n      <div className=\"Locations__container-title\">\n        <h2>Locations</h2>\n        </div>\n        <LocationsForm \n          name={name}\n          setName={setName}\n          type={type}\n          setType={setType}\n          dimension={dimension}\n          setDimension={setDimension}\n        />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Dimension</th>\n            </tr>\n            </thead>\n            <tbody>\n            {filterByDimension(filterByType(filterByNames(locations))).map(item => (\n              <tr key={item.id}>\n                <td>{item.id}</td>\n                <td>{item.name}</td>\n                <td>{item.type}</td>\n                <td>{item.dimension}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n    </div>\n  );\n}","export const addToLocaleStorage = (item:any,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      [...list,item]\n    ));\n  }\n\nexport const removeCheckedfromLocaleStorage = (id:number,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      list.filter((item :any) => item !== id)\n    ));\n  }\n\nexport const removeListfromLocaleStorage = (id:number,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      list.filter((item :any) => item.id !== id)\n    ));\n  }","import React ,{ useState, useEffect }from 'react';\nimport { Button, Form, CloseButton } from 'react-bootstrap';\nimport './MyWatchList.scss';\nimport { useSelector } from 'react-redux';\nimport { \n  addToLocaleStorage,\n  removeCheckedfromLocaleStorage,\n  removeListfromLocaleStorage,\n} from '../FunctionForLocaleStorage/FunctionForLocaleStorage';\n\nif (!JSON.parse(localStorage.getItem('array')!)) {\n  localStorage.setItem('array',JSON.stringify([]));\n}\nif (!JSON.parse(localStorage.getItem('checked')!)) {\n  localStorage.setItem('checked',JSON.stringify([]));\n}\nexport const MyWatchList = () => {\n  const hideShowForm = useSelector((item:any) => item.myWatchListReducer.show);\n  const [isValidInput,setIsValidInput] = useState<number|boolean>(0);\n  const [nameEpisode , setNameEpisode] = useState('');\n  const [clickAdd , setClickAdd] = useState(0);\n  const [watchList , setWatchList] = useState(JSON.parse(localStorage.getItem('array')!)||[]);\n  const [checked,setChecked] = useState(JSON.parse(localStorage.getItem('checked')!)||[]);\n  \n  useEffect(()=> {\n    setWatchList(JSON.parse(localStorage.getItem('array')!));\n  },[clickAdd]);\n\n\n  return(\n    <div className=\"MyWatchList__container\">\n      {watchList.length > 0 && <div className=\"MyWatchList__container-title\">\n        <h2>My watch list :</h2>\n      </div>}\n      {hideShowForm &&\n      <div className=\"is_valid\">\n        <Form.Control\n          isInvalid={isValidInput === false}\n          isValid={isValidInput === true}\n          value={nameEpisode}\n          onChange={({target}) => {\n            if(target.value.length > 0) {\n              setIsValidInput(true);\n            } else if (target.value.length <= 0) {\n              setIsValidInput(false);\n            }\n              setNameEpisode(target.value);\n          }}\n          placeholder=\"Write down a new episode to watch later\"\n        />\n       <div className=\"is_valid-text\">{isValidInput === false && 'Empty , min length = 1'}</div>\n       </div>\n      }\n      {(watchList.length > 0) && \n        <ul className=\"MyWatchList__container-list_all\">\n        {watchList.map((item:{id:number,name:string}) => (\n          <li className=\"MyWatchList__container-list\" key={item.id}>\n            <Form.Check\n              checked={JSON.parse(localStorage.getItem('checked')!).includes(item.id)}\n              value={checked}\n              onChange={() => setChecked((prev:any[]):any[] => {\n                if(!prev.includes(item.id)) {\n                  addToLocaleStorage(item.id,'checked', checked);\n                  return [...prev,item.id];\n                } else {\n                  removeCheckedfromLocaleStorage(item.id,'checked',checked);\n                  return prev.filter((value:any):any=> value !== item.id);\n                }\n              })}\n            />\n            <div className={checked.includes(item.id)? 'checked' : 'unChecked'}>{item.name}</div>\n            <CloseButton\n              className=\"MyWatchList__container-button_close\"\n              onClick={()=> {\n              setClickAdd(prev => prev + 1);\n              removeListfromLocaleStorage(item.id,'array',watchList);\n              removeCheckedfromLocaleStorage(item.id,'checked',checked);\n            }}/>\n          </li>\n        ))}\n      </ul>\n      }\n      {hideShowForm && \n      <Button \n        onClick={()=> {\n        if (nameEpisode.length) {\n          const listDate = {name: nameEpisode,id:new Date().toLocaleString()}\n          setWatchList((prev:any[]):any[] => ([...prev,listDate]));\n          addToLocaleStorage(listDate,'array', watchList);\n          setNameEpisode('');\n          setIsValidInput(0);\n        } else {\n          setClickAdd(prev => prev + 1);\n          setIsValidInput(false);\n        }\n      }}>\n        Add new episode\n      </Button>}\n      {watchList.length <= 0 && (\n      <div>\n        <div className=\"MyWatchList__container_empty\">\n          <h3 className=\"MyWatchList__container_empty-title\">Your list is empty ...</h3>\n        </div>\n      </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport { CharactersList } from '../Characters/CharactersList/Charactesrs';\nimport { Route ,Switch} from 'react-router';\nimport { EpisodesList } from '../Episodes/EpisodesList/EpisodesList';\nimport { LocationsList } from '../Locations/LocationsList/LocationsList';\nimport { MyWatchList } from '../MyWatchList/MyList/MyWatchList';\n\nexport const NavigationBarRoute = () => {\n  return (\n    <Switch>\n    <Route path=\"/Episodes\" exact>\n      <EpisodesList/>\n    </Route>\n    <Route path=\"/Locations\" exact>\n      <LocationsList/>\n    </Route>\n    <Route path=\"/My_watch_list\" exact>\n      <MyWatchList/>\n    </Route>\n    <Route path=\"\">\n      <CharactersList/>\n    </Route>\n    </Switch>\n  )\n}","import React,{useState} from 'react';\nimport './NavigationBar.scss';\nimport { Navbar, Container } from 'react-bootstrap';\nimport {\n  BrowserRouter,\n  Link\n} from \"react-router-dom\";\nimport { NavigationBarRoute } from '../RouteNavBar/NavigationBarRoute/RouteNavBar';\nimport { useDispatch } from 'react-redux';\n\nexport const NavigationBar = () => {\n  const dispatch = useDispatch();\n  const [currentUrl,setCurrentUrl] = useState('/');\n  const [choosenLink,setChoosenLink] = useState(\"\");\n  return (\n    <BrowserRouter>\n      <Navbar\n        className=\"NavigationBar\" \n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Container className=\"NavigationBar__container\">\n          <Navbar.Brand>\n            <Link\n              className=\"NavigationBar__logo-filter_container\"\n              onClick={() => {\n                setCurrentUrl(\"/\");\n                setChoosenLink(\"character\");\n              }} \n              to=\"/\"\n            >\n              <div className=\"NavigationBar__logo\"/>\n            </Link>\n          </Navbar.Brand>\n            <nav className=\"NavigationBar__link-container\">\n              <Link\n                onClick={()=> {\n                  setChoosenLink(\"character\");\n                  setCurrentUrl(\"/\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"character\" \n                    && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/\"\n              >\n                Characters\n              </Link>\n              <Link\n               onClick={()=> {\n                 setCurrentUrl(\"/Episodes\");\n                 setChoosenLink(\"episodes\");\n                }}\n               className={`NavigationBar__link \n                 ${choosenLink === \"episodes\" \n                   && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/Episodes\"\n              >\n                Episodes\n              </Link>\n              <Link\n                onClick={() => {\n                  setCurrentUrl(\"/Locations\");\n                  setChoosenLink(\"locations\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"locations\"\n                    && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/Locations\"\n              >\n                Locations\n              </Link>\n              <Link\n                onClick={() => {\n                  setCurrentUrl(\"/My_watch_list\");\n                  setChoosenLink(\"My_watch_list\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"My_watch_list\"\n                  && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/My_watch_list\"\n              >\n                My watch list\n              </Link>\n              <div\n                onClick={() => {\n                  if (currentUrl === '/') {\n                    dispatch({type:\"CHARACTER/OPEN\"});\n                  }\n                  if (currentUrl === \"/Episodes\") {\n                    dispatch({type:\"EPISODE/OPEN\"});\n                  }\n                  if(currentUrl === \"/Locations\") {\n                    dispatch({type:\"LOCATION/OPEN\"});\n                  }\n                  if(currentUrl === \"/My_watch_list\") {\n                    dispatch({type:\"MYWATCHLIST/OPEN\"});\n                  }\n                }}\n                className=\"NavigationBar__icon-filter\"\n              />\n            </nav>\n        </Container>\n      </Navbar>\n      <NavigationBarRoute/>\n    </BrowserRouter>\n  )\n};\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavigationBar } from './components/NavigationBar/NavigationBar';\n\n\n\n\nfunction App() {\n   return (\n    <div className=\"App\">\n      <NavigationBar/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"CHARACTER/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"EPISODE/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"LOCATION/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"MYWATCHLIST/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { composeWithDevTools } from 'redux-devtools-extension';\nimport {combineReducers, createStore} from 'redux';\nimport { reducer as characterReducer } from \"./characterReducer/reducer\";\nimport { reducer as episodeReducer } from './episodesReducer/reducer';\nimport { reducer as locationReducer } from './locationReducer/reducer';\nimport { reducer as myWatchListReducer } from './MyWatchListReducer/reducer';\nconst combineReducer = combineReducers({\n  characterReducer,\n  episodeReducer,\n  locationReducer,\n  myWatchListReducer,\n});\nexport const store = createStore(combineReducer,composeWithDevTools());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}