{"version":3,"sources":["components/Fetch/getInfoByServer.ts","components/Fetch/fetchAllUrl.ts","components/RouteNavBar/Episodes/EpisodesListTable/EpisodeListTable.tsx","components/RouteNavBar/Episodes/EpisodesList/EpisodesList.tsx","components/RouteNavBar/Locations/LocationsForm/LocationsForm.tsx","components/RouteNavBar/Locations/LocationsList/LocationsList.tsx","components/RouteNavBar/MyWatchList/FunctionForLocaleStorage/FunctionForLocaleStorage.ts","components/RouteNavBar/MyWatchList/MyList/MyWatchList.tsx","components/RouteNavBar/Characters/PersonCardPopup/PersonCardPopup.tsx","components/RouteNavBar/Characters/CharacterCard/CharacterCard.tsx","components/RouteNavBar/Characters/CharacterListForm/CharacterListForm.tsx","components/RouteNavBar/Characters/CharactersList/Charactesrs.tsx","components/NavigationBar/NavigationBar.tsx","App.tsx","reportWebVitals.ts","store/characterReducer/reducer.ts","store/episodesReducer/reducer.ts","store/locationReducer/reducer.ts","store/MyWatchListReducer/reducer.ts","store/index.ts","index.tsx"],"names":["getCharactersByServer","setState","a","axios","get","allCharacters","data","results","alert","getLocationsByServer","allLocation","getEpisodesByServer","allEpisodes","EpisodeListTable","item","id","name","air_date","url","EpisodesList","useState","episodesList","setEpisodesList","inputName","setInputName","hideShowForm","useSelector","console","log","episodeReducer","show","useEffect","array","className","Form","Control","onChange","target","value","placeholder","Table","bordered","hover","length","filter","toLowerCase","includes","map","LocationsForm","setName","setType","dimension","setDimension","type","locationReducer","LocationsList","locations","setLocations","striped","filterByDimension","filterByType","addToLocaleStorage","list","localStorage","setItem","JSON","stringify","removeCheckedfromLocaleStorage","parse","getItem","MyWatchList","myWatchListReducer","isValidInput","setIsValidInput","nameEpisode","setNameEpisode","clickAdd","setClickAdd","watchList","setWatchList","checked","setChecked","isInvalid","isValid","Check","prev","CloseButton","onClick","Button","listDate","Date","toLocaleString","PersonCardPopup","setShow","character","Modal","size","onHide","Header","closeButton","Title","Body","alt","src","image","gender","species","status","location","episode","CharacterCard","Fragment","CharacterListForm","setStatus","setSpecies","setGender","characterReducer","e","CharactersList","characters","setCharacters","checkGender","checkStatus","NavigationBar","dispatch","useDispatch","currentUrl","setCurrentUrl","choosenLink","setChoosenLink","Navbar","bg","variant","Container","Brand","to","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","OPEN","defaultState","combineReducer","combineReducers","state","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b11592f.chunk.js","sourcesContent":["import axios from 'axios';\nimport { characters, locations, episodes } from './fetchAllUrl';\n\nexport const getCharactersByServer = async(setState:(a:any) => void) => {\n  try {\n    const allCharacters = await axios.get(characters);\n    setState(allCharacters.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n};\n\nexport const getLocationsByServer = async(setState:(a:any) => void) => {\n  try {\n    const allLocation = await axios.get(locations);\n    setState(allLocation.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n}\n\nexport const getEpisodesByServer = async(setState:(a:any) => void) => {\n  try {\n    const allEpisodes = await axios.get(episodes);\n    setState(allEpisodes.data.results);\n  }\n  catch (err) {\n    alert (err);\n  }\n}\n\n\n\n","export const characters = \"https://rickandmortyapi.com/api/character\";\nexport const  locations = \"https://rickandmortyapi.com/api/location\";\nexport const episodes = \"https://rickandmortyapi.com/api/episode\";","import React from 'react';\nimport { episodesListTypes } from '../../../../types/Episodes/EpisodesType';\n\ninterface list {\n  item:episodesListTypes;\n}\nexport const EpisodeListTable = ({item}:list) => {\n  return (\n  <tbody key={item.id}>\n    <tr>\n      <td>{item.id}</td>\n      <td>{item.name}</td>\n      <td>{item.air_date}</td>\n      <td>{item.url}</td>\n    </tr>\n  </tbody>\n  );\n}","import React , { useState, useEffect } from 'react';\nimport { getEpisodesByServer } from '../../../Fetch/getInfoByServer';\nimport { Form, Table } from 'react-bootstrap';\nimport './EpisodesList.scss';\nimport { episodesListTypes } from '../../../../types/Episodes/EpisodesType';\nimport { EpisodeListTable } from '../EpisodesListTable/EpisodeListTable';\nimport { useSelector } from 'react-redux';\n\nexport const EpisodesList = () => {\n  const [episodesList,setEpisodesList] = useState<episodesListTypes[]>([]);\n  const [inputName,setInputName] = useState('');\n  const hideShowForm = useSelector((item:any) => {\n    console.log(item.episodeReducer.show);\n    return item.episodeReducer.show;\n  });\n  useEffect(()=> {\n    getEpisodesByServer(setEpisodesList);\n  },[]);\n\n  const filterByName = (array:episodesListTypes[]) => {\n    if(array && inputName.length) {\n      return array.filter(item => (\n        item.name.toLowerCase().includes(inputName.toLowerCase())));\n    }\n    return array;\n  }\n\n  return (\n      <div className={\"Episodes__container\"}>\n        <div className=\"Episodes__container-title\">\n            <h2>Episodes:</h2>\n        </div>\n        {  hideShowForm &&\n          <Form.Control\n            className={\"Episodes__container-filter\"}\n            onChange={({target}) => setInputName(target.value)}\n            value={inputName}\n            placeholder=\"filter by names\"\n          />\n        }\n        <Table bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>name</th>\n            <th>Air date</th>\n            <th>Url episode</th>\n          </tr>\n        </thead>\n          {filterByName(episodesList).map(item => (\n            <EpisodeListTable key={item.id} item={item}/>\n          ))}\n        </Table>\n      </div>\n  );\n} ","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { locationsFormTypes } from '../../../../types/Locations/LocationsTypes';\n\nexport const LocationsForm = (\n  {\n    name,\n    setName,\n    setType,\n    dimension,\n    setDimension,\n    type,\n  }:locationsFormTypes) => {\n    const hideShowForm = useSelector((item:any) => {\n      console.log(item.locationReducer.show);\n      return item.locationReducer.show;\n    });\n  return (\n    <>\n      {hideShowForm &&\n      <div className=\"Locations__container-form\">\n        <Form.Control \n          placeholder=\"filter by names\"\n          value={name}\n          onChange={({target}) => setName(target.value)}\n        />\n        <Form.Control \n          placeholder=\"filter by types\"\n          value={type}\n          onChange={({target}) => setType(target.value)}\n        />\n        <Form.Control \n          placeholder=\"filter by dimensions\"\n          value={dimension}\n          onChange={({target}) => setDimension(target.value)}\n        />\n      </div>}\n    </>\n  );\n} ","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { getLocationsByServer } from '../../../Fetch/getInfoByServer';\nimport './LocationsList.scss';\nimport { locationsTypes } from '../../../../types/Locations/LocationsTypes';\nimport { LocationsForm } from '../LocationsForm/LocationsForm';\nexport const LocationsList = () => {\n  const [name,setName] = useState('');\n  const [type,setType] = useState('');\n  const [dimension,setDimension] = useState('');\n  const [locations,setLocations] = useState<locationsTypes[]>([]);\n\n  useEffect(()=> {\n    getLocationsByServer(setLocations);\n  },[]);\n\n  const filterByNames = (array: locationsTypes[]) => {\n    if (array.length && name.length) {\n      return array.filter(item => (\n        item.name.toLowerCase().includes(name.toLowerCase())));\n    }\n\n    return array;\n  }\n\n  const filterByType = (array:locationsTypes[]) => {\n    if (array.length && type.length) {\n      return array.filter(item => (\n        item.type.toLowerCase().includes(type.toLowerCase())));\n    }\n\n    return array;\n  }\n\n  const filterByDimension = (array:locationsTypes[]) => {\n    if (array.length && dimension.length) {\n      return array.filter(item => (\n        item.dimension.toLowerCase().includes(dimension.toLowerCase())));\n    }\n\n    return array;\n  }\n\n\n  return (\n    <div className=\"Locations__container\">\n      <div className=\"Locations__container-title\">\n        <h2>Locations</h2>\n        </div>\n        <LocationsForm \n          name={name}\n          setName={setName}\n          type={type}\n          setType={setType}\n          dimension={dimension}\n          setDimension={setDimension}\n        />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Dimension</th>\n            </tr>\n            </thead>\n            <tbody>\n            {filterByDimension(filterByType(filterByNames(locations))).map(item => (\n              <tr key={item.id}>\n                <td>{item.id}</td>\n                <td>{item.name}</td>\n                <td>{item.type}</td>\n                <td>{item.dimension}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n    </div>\n  );\n}","export const addToLocaleStorage = (item:any,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      [...list,item]\n    ));\n  }\n\nexport const removeCheckedfromLocaleStorage = (id:number,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      list.filter((item :any) => item !== id)\n    ));\n  }\n\nexport const removeListfromLocaleStorage = (id:number,name:string,list:any) => {\n    return localStorage.setItem(name,JSON.stringify(\n      list.filter((item :any) => item.id !== id)\n    ));\n  }","import React ,{ useState, useEffect }from 'react';\nimport { Button, Form, CloseButton } from 'react-bootstrap';\nimport './MyWatchList.scss';\nimport { useSelector } from 'react-redux';\nimport { \n  addToLocaleStorage,\n  removeCheckedfromLocaleStorage,\n  removeListfromLocaleStorage,\n} from '../FunctionForLocaleStorage/FunctionForLocaleStorage';\n\nif (!JSON.parse(localStorage.getItem('array')!)) {\n  localStorage.setItem('array',JSON.stringify([]));\n}\nif (!JSON.parse(localStorage.getItem('checked')!)) {\n  localStorage.setItem('checked',JSON.stringify([]));\n}\nexport const MyWatchList = () => {\n  const hideShowForm = useSelector((item:any) => item.myWatchListReducer.show);\n  const [isValidInput,setIsValidInput] = useState<number|boolean>(0);\n  const [nameEpisode , setNameEpisode] = useState('');\n  const [clickAdd , setClickAdd] = useState(0);\n  const [watchList , setWatchList] = useState(JSON.parse(localStorage.getItem('array')!)||[]);\n  const [checked,setChecked] = useState(JSON.parse(localStorage.getItem('checked')!)||[]);\n  \n  useEffect(()=> {\n    setWatchList(JSON.parse(localStorage.getItem('array')!));\n  },[clickAdd]);\n\n\n  return(\n    <div className=\"MyWatchList__container\">\n      {watchList.length > 0 && <div className=\"MyWatchList__container-title\">\n        <h2>My watch list :</h2>\n      </div>}\n      {hideShowForm &&\n      <div className=\"is_valid\">\n        <Form.Control\n          isInvalid={isValidInput === false}\n          isValid={isValidInput === true}\n          value={nameEpisode}\n          onChange={({target}) => {\n            if(target.value.length > 0) {\n              setIsValidInput(true);\n            } else if (target.value.length <= 0) {\n              setIsValidInput(false);\n            }\n              setNameEpisode(target.value);\n          }}\n          placeholder=\"Write down a new episode to watch later\"\n        />\n       <div className=\"is_valid-text\">{isValidInput === false && 'Empty , min length = 1'}</div>\n       </div>\n      }\n      {(watchList.length > 0) && \n        <ul className=\"MyWatchList__container-list_all\">\n        {watchList.map((item:{id:number,name:string}) => (\n          <li className=\"MyWatchList__container-list\" key={item.id}>\n            <Form.Check\n              checked={JSON.parse(localStorage.getItem('checked')!).includes(item.id)}\n              value={checked}\n              onChange={() => setChecked((prev:any[]):any[] => {\n                if(!prev.includes(item.id)) {\n                  addToLocaleStorage(item.id,'checked', checked);\n                  return [...prev,item.id];\n                } else {\n                  removeCheckedfromLocaleStorage(item.id,'checked',checked);\n                  return prev.filter((value:any):any=> value !== item.id);\n                }\n              })}\n            />\n            <div className={checked.includes(item.id)? 'checked' : 'unChecked'}>{item.name}</div>\n            <CloseButton\n              className=\"MyWatchList__container-button_close\"\n              onClick={()=> {\n              setClickAdd(prev => prev + 1);\n              removeListfromLocaleStorage(item.id,'array',watchList);\n              removeCheckedfromLocaleStorage(item.id,'checked',checked);\n            }}/>\n          </li>\n        ))}\n      </ul>\n      }\n      {hideShowForm && \n      <Button \n        onClick={()=> {\n        if (nameEpisode.length) {\n          const listDate = {name: nameEpisode,id:new Date().toLocaleString()}\n          setWatchList((prev:any[]):any[] => ([...prev,listDate]));\n          addToLocaleStorage(listDate,'array', watchList);\n          setNameEpisode('');\n          setIsValidInput(0);\n        } else {\n          setClickAdd(prev => prev + 1);\n          setIsValidInput(false);\n        }\n      }}>\n        Add new episode\n      </Button>}\n      {watchList.length <= 0 && (\n      <div>\n        <div className=\"MyWatchList__container_empty\">\n          <h3 className=\"MyWatchList__container_empty-title\">Your list is empty ...</h3>\n        </div>\n      </div>\n      )}\n    </div>\n  )\n}\n","import { Modal } from 'react-bootstrap';\nimport { characterTypes } from '../../../../types/Fetch/Characters';\nimport './PersonCardPopup.scss';\n\nexport const PersonCardPopup = ({show,setShow,character}:characterTypes) => {\n  return (\n    <Modal\n      size=\"xl\"\n      show={show}\n      onHide={() => setShow(false)}\n    >\n    <Modal.Header closeButton>\n      <Modal.Title>{character.name}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body className=\"PersonCardPopup__container\">\n      <img\n        alt={character.name}\n        src={character.image} \n      />\n      <div className=\"PersonCardPopup__container_text\">\n        <p>\n            Gender: {character.gender}\n        </p>\n        <p>\n            Species: {character.species}\n        </p>\n        <p>\n            Status: {character.status}\n        </p>\n        <p>\n            Location: {character.location?.name}\n        </p>\n        <p>\n            Location(URL): {character.location?.url}\n        </p>\n        <p>\n            Episode(URL): {character.episode?.[0]}\n        </p>\n      </div>\n    </Modal.Body>\n  </Modal>\n)\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { characterTypes } from '../../../../types/Fetch/Characters';\nimport { PersonCardPopup } from '../PersonCardPopup/PersonCardPopup';\n\nexport const CharacterCard = ({character}:characterTypes) => {\n  const [show, setShow] = useState(false);\n\n  return (\n<React.Fragment>\n  <div\n    onClick={() => setShow(true)}\n    className=\"RouteCharacters__container-characters\"\n  >\n    <h3>{character.name}</h3>\n    <img \n      alt={character.name}\n      src={character.image}\n    />\n    <p\n      className=\"RouteCharacters__container-characters_gender\"\n    >\n      Gender: {character.gender}\n    </p>\n    <p\n       className=\"RouteCharacters__container-characters_species\"\n    >\n      Species: {character.species}\n    </p>\n    <p\n      className={`${character.status === \"Alive\" ? \"alive__status\" : \"dead__status\"}`}\n    >\n      Status: {character.status}\n    </p>\n  </div>\n  <PersonCardPopup \n    show={show}\n    setShow={setShow}\n    character={character}\n  />\n</ React.Fragment>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const CharacterListForm = ({setStatus,setSpecies,setGender}:any) => {\n  const hideShowForm = useSelector((item:any) => item.characterReducer.show);\n  return (\n    <>\n    {\n        hideShowForm && (\n          <div className=\"RouteCharacters__container-input\">\n        Species:<select\n          onChange={(e)=>{\n            setSpecies(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">Both</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Alien\">Alien</option>\n        </select>\n        Status:<select\n          onChange={(e)=>{\n            setStatus(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">All</option>\n          <option value=\"Dead\">Dead</option>\n          <option value=\"Alive\">Alive</option>\n          <option value=\"unknown\">unknown</option>\n        </select>\n        Gender:<select\n          onChange={(e)=>{\n            setGender(e.target.value);\n          }}\n          className=\"RouteCharacters__container-input_species\" \n          placeholder=\"filter by gender\"\n        >\n          <option value=\"Both\">Both</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n        </select>\n      </div>\n        )\n      }\n  </>\n  );\n}","import React,{ useEffect,useState } from 'react';\nimport { getCharactersByServer } from '../../../Fetch/getInfoByServer';\nimport './Characters.scss';\nimport { CharacterCard } from '../CharacterCard/CharacterCard';\nimport { CharacterListForm } from '../CharacterListForm/CharacterListForm';\n\nexport const CharactersList = () => {\n  const [characters,setCharacters] = useState<any[]>([]);\n  const [species,setSpecies] = useState('Both');\n  const [status, setStatus] = useState('Both');\n  const [gender, setGender] = useState('Both');\n\n  const checkSpecies = (array:{species: string}[]): any[] => {\n    if (array.length && species === \"Both\") {\n      return array;\n    }\n    if(array.length && (species === \"Human\" || species === \"Alien\")) {\n      return array.filter(item => item.species === species)\n    }\n    return array;\n  }\n  const checkStatus = (array:{status:string}[]): any[] => {\n    if (array.length && status === \"Both\") {\n      return array;\n    }\n    if(array.length && (status === \"Dead\" || status === \"Alive\" || \"unknown\")) {\n      return array.filter(item => item.status === status)\n    }\n    return array;\n  }\n\n  const checkGender = (array:{gender:string}[]): any[] => {\n    if (array.length && gender === \"Both\") {\n      return array;\n    }\n    if(array.length && (gender === \"Male\"|| gender === \"Female\")) {\n      return array.filter(item => item.gender === gender)\n    }\n    return array;\n  }\n\n  useEffect(() => {\n    getCharactersByServer(setCharacters)\n  },[]);\n\n  return (\n      <div className=\"RouteCharacters\">\n        <div className=\"RouteCharacters__container_title\">\n          <h2>List of Characters</h2>\n        </div>\n        <CharacterListForm \n          setSpecies={setSpecies}\n          setGender={setGender}\n          setStatus={setStatus}\n        />\n        <div className=\"RouteCharacters__container\">\n          {checkGender(checkStatus(checkSpecies(characters))).map(character => (\n            <CharacterCard key={character.id} character={character}/>\n          ))}\n        </div>\n      </div>\n  );\n} ","import React,{useState} from 'react';\nimport './NavigationBar.scss';\nimport { Navbar, Container } from 'react-bootstrap';\nimport {\n  Link,\n  BrowserRouter as Router,Switch,Route,\n} from \"react-router-dom\";\nimport { EpisodesList } from '../RouteNavBar/Episodes/EpisodesList/EpisodesList';\nimport { LocationsList } from '../RouteNavBar/Locations/LocationsList/LocationsList';\nimport { MyWatchList } from '../RouteNavBar/MyWatchList/MyList/MyWatchList';\nimport { CharactersList } from '../RouteNavBar/Characters/CharactersList/Charactesrs';\n//import { NavigationBarRoute } from '../RouteNavBar/NavigationBarRoute/RouteNavBar';\nimport { useDispatch } from 'react-redux';\n\nexport const NavigationBar = () => {\n  const dispatch = useDispatch();\n  const [currentUrl,setCurrentUrl] = useState('/');\n  const [choosenLink,setChoosenLink] = useState(\"\");\n  return (\n    <Router>\n      <Navbar\n        className=\"NavigationBar\" \n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Container className=\"NavigationBar__container\">\n          <Navbar.Brand>\n            <Link\n              className=\"NavigationBar__logo-filter_container\"\n              onClick={() => {\n                setCurrentUrl(\"/\");\n                setChoosenLink(\"character\");\n              }} \n              to=\"/\"\n            >\n              <div className=\"NavigationBar__logo\"/>\n            </Link>\n          </Navbar.Brand>\n            <nav className=\"NavigationBar__link-container\">\n              <Link\n                onClick={()=> {\n                  setChoosenLink(\"character\");\n                  setCurrentUrl(\"/\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"character\" \n                    && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/\"\n              >\n                Characters\n              </Link>\n              <Link\n               onClick={()=> {\n                 setCurrentUrl(\"/Episodes\");\n                 setChoosenLink(\"episodes\");\n                }}\n               className={`NavigationBar__link \n                 ${choosenLink === \"episodes\" \n                   && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/Episodes\"\n              >\n                Episodes\n              </Link>\n              <Link\n                onClick={() => {\n                  setCurrentUrl(\"/Locations\");\n                  setChoosenLink(\"locations\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"locations\"\n                    && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/Locations\"\n              >\n                Locations\n              </Link>\n              <Link\n                onClick={() => {\n                  setCurrentUrl(\"/My_watch_list\");\n                  setChoosenLink(\"My_watch_list\");\n                }}\n                className={`NavigationBar__link \n                  ${choosenLink === \"My_watch_list\"\n                  && \"choosen_nav_link\"\n                  }`\n                }\n                to=\"/My_watch_list\"\n              >\n                My watch list\n              </Link>\n              <div\n                onClick={() => {\n                  if (currentUrl === '/') {\n                    dispatch({type:\"CHARACTER/OPEN\"});\n                  }\n                  if (currentUrl === \"/Episodes\") {\n                    dispatch({type:\"EPISODE/OPEN\"});\n                  }\n                  if(currentUrl === \"/Locations\") {\n                    dispatch({type:\"LOCATION/OPEN\"});\n                  }\n                  if(currentUrl === \"/My_watch_list\") {\n                    dispatch({type:\"MYWATCHLIST/OPEN\"});\n                  }\n                }}\n                className=\"NavigationBar__icon-filter\"\n              />\n            </nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route path=\"/Episodes\" exact>\n          <EpisodesList/>\n        </Route>\n        <Route path=\"/Locations\" exact>\n          <LocationsList/>\n        </Route>\n        <Route path=\"/My_watch_list\" exact>\n          <MyWatchList/>\n        </Route>\n        <Route path=\"/\" exact>\n          <CharactersList/>\n        </Route>\n      </Switch>\n    </Router>\n  )\n};\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavigationBar } from './components/NavigationBar/NavigationBar';\n\n\n\nfunction App() {\n   return (\n     <>\n    <div className=\"App\">\n      <NavigationBar/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"CHARACTER/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"EPISODE/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"LOCATION/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { defaultStateType } from '../../types/Characters/ReducerTypes';\n \nconst OPEN = \"MYWATCHLIST/OPEN\";\n\nconst defaultState : defaultStateType = {\n  show:false,\n}\nexport const reducer = (state:defaultStateType=defaultState,action:{type:string}) => {\n  switch(action.type) {\n    case OPEN :\n      return {show: !state.show}\n    default :\n      return state;\n  }\n}","import { composeWithDevTools } from 'redux-devtools-extension';\nimport {combineReducers, createStore} from 'redux';\nimport { reducer as characterReducer } from \"./characterReducer/reducer\";\nimport { reducer as episodeReducer } from './episodesReducer/reducer';\nimport { reducer as locationReducer } from './locationReducer/reducer';\nimport { reducer as myWatchListReducer } from './MyWatchListReducer/reducer';\nconst combineReducer = combineReducers({\n  characterReducer,\n  episodeReducer,\n  locationReducer,\n  myWatchListReducer,\n});\nexport const store = createStore(combineReducer,composeWithDevTools());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}